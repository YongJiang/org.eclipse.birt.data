<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   <extension
         id="BirtScriptFunction"
         name="BirtScriptFunction"
         point="org.eclipse.birt.core.ScriptFunctionService">
   <Category factoryclass="org.eclipse.birt.core.script.function.bre.BirtStrFunctionFactory" name="BirtStr" desc="Provides String operation functions.">
   	<Function
          desc="Returns the number of characters in string."
          name="charLength">
   		<Argument name="source">
   			<DataType value="%dataType.String"></DataType></Argument>
   		<DataType value="%dataType.Integer"></DataType></Function>
   	<Function
          desc="Returns a string concatenated by all the given strings."
          name="concat"
          variableArguments="true">
   		<Argument name="source">
   			<DataType value="%dataType.String"></DataType></Argument>
   		<DataType value="%dataType.String"></DataType></Function>
   	<Function
          desc="Searches for target in the string source and returns the index of first occurrence of pattern. Search starts at position start. All index values are 0-based.If start is omitted, a value of 0 is assumed. String search is case sensitive."
          name="indexOf">
   		<Argument name="source"></Argument>
   		<Argument name="target"></Argument>
   		<Argument isOptional="true" name="start"></Argument>
   		<DataType value="%dataType.Integer"></DataType></Function>
   	<Function
          desc="Returns the first n characters of the string str. If n is 0, an empty string is returned. If n is greater than the length of str, the entire string is returned. If n is omitted, a value of 1 is used."
          name="left">
   		<Argument name="source">
   			<DataType value="%dataType.String"></DataType></Argument>
   		<Argument isOptional="true" name="n">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<DataType value="%dataType.String"></DataType></Function>
   	<Function
          desc="Returns the last n characters of the string str. If n is 0, an empty string is returned. If n is greater than the length of str, the entire string is returned. If n is omitted, a value of 1 is used."
          name="right">
   		<Argument name="source">
   			<DataType value="%dataType.String"></DataType></Argument>
   		<Argument name="n" isOptional="true">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<DataType value="%dataType.String"></DataType></Function>
   	<Function
          desc="Similar to indexOf function, except that: (1) string comparison is case-insensitive (2) pattern string can contain wildcard characters: * matches any sequence of characters (including empty); ? matches any * matches any sequence of characters (including empty); ? matches any * matches any sequence of characters (including empty); ? matches any single character. "
          name="search">
   		<Argument name="pattern">
   			<DataType value="%dataType.String"></DataType></Argument>
   		<Argument name="source">
   			<DataType value="%dataType.String"></DataType></Argument>
   		<Argument isOptional="true" name="index">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<DataType value="%dataType.Integer"></DataType></Function>
   	<Function
          desc="Converts all of the characters in the String source to lower case."
          name="toLower">
   		<Argument name="source">
   			<DataType value="%dataType.String"></DataType></Argument>
   		<DataType value="%dataType.String"></DataType></Function>
   	<Function
          desc="Converts all of the characters in the String source to upper case."
          name="toUpper">
   		<Argument name="source">
   			<DataType value="%dataType.String"></DataType>
   		</Argument>
   		<DataType value="%dataType.String"></DataType>
   	</Function>
   	<Function
          desc="Removes all leading and trailing blank characters (space, TAB etc.).Also, all consecutive blank characters are consolidated into one. "
          name="trim">
   		<Argument name="source">
   			<DataType value="%dataType.String"></DataType></Argument>
   		<DataType value="%dataType.String"></DataType></Function>
   	<Function
          desc="Removes all leading blanks. Trailing blanks and blanks between words are not removed."
          name="trimLeft">
   		<Argument name="source">
   			<DataType value="%dataType.String"></DataType></Argument>
   		<DataType value="%dataType.String"></DataType></Function>
   	<Function
          desc="Removes all trailing blanks. Leading blanks and blanks between words are not removed."
          name="trimRight">
   		<Argument name="source">
   			<DataType value="%dataType.String"></DataType></Argument>
   		<DataType value="%dataType.String"></DataType></Function></Category>
   <Category factoryclass="org.eclipse.birt.core.script.function.bre.BirtCompFunctionFactory" name="BirtComp" desc="Provide comparion functions.">
   	<Function
          desc="source is in the target range"
          name="anyOf"
          variableArguments="true">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target">
   			<DataType value="%dataType.Any"></DataType></Argument>
   	</Function>
   	<Function
          desc="TRUE if source is between target1 and target2. FALSE otherwise"
          name="between">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target1">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target2">
   			<DataType value="%dataType.Any"></DataType></Argument></Function>
   	<Function
          desc="TRUE if source is not between target1 and target2. FALSE otherwise"
          name="notBetween">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target1">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target2">
   			<DataType value="%dataType.Any"></DataType></Argument></Function>
   	<Function
          desc="source is equal to target"
          name="equalTo">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target">
   			<DataType value="%dataType.Any"></DataType></Argument></Function>
   	<Function
          desc="source is greater than target"
          name="greaterThan">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target">
   			<DataType value="%dataType.Any"></DataType></Argument>
   	</Function>
   	<Function
          desc="source is less than target"
          name="lessThan">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target">
   			<DataType value="%dataType.Any"></DataType></Argument>
   	</Function>
   	<Function
          desc="source is greater than or equal to target"
          name="greaterOrEqual">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target">
   			<DataType value="%dataType.Any"></DataType></Argument>
   	</Function>
   	<Function
          desc="source is less than or equal to target"
          name="lessOrEqual">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target">
   			<DataType value="%dataType.Any"></DataType></Argument>
   	</Function>
   	<Function
          desc="source is not equal to target"
          name="notEqual">
   		<DataType value="Boolean"></DataType></Function>
   	<Function
          desc="source matches SQL pattern target"
          name="like">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target">
   			<DataType value="%dataType.Any"></DataType></Argument>
   	</Function>
   	<Function
          desc="source does not  match SQL pattern target"
          name="notLike">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target">
   			<DataType value="%dataType.Any"></DataType></Argument>
   	</Function>
   	<Function
          desc="source matches Javascript pattern target"
          name="match">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.Any"></DataType></Argument>
   		<Argument name="target">
   			<DataType value="%dataType.Any"></DataType></Argument>
   	</Function>
   	<Function
          desc="compare the two strings by the specified conditions"
          name="compareString">
   		<DataType value="Boolean"></DataType>
   		<Argument name="source1">
   			<DataType value="%dataType.String"></DataType>
   		</Argument>
   		<Argument name="source2">
   			<DataType value="%dataType.String"></DataType>
   		</Argument>
   		<Argument name="ignoreCase" isOptional="true">
   			<DataType value="Boolean"></DataType></Argument>
   		<Argument name="trim" isOptional="true">
   			<DataType value="Boolean"></DataType></Argument></Function>
   </Category>
   <Category
   	factoryclass="org.eclipse.birt.core.script.function.bre.BirtMathFunctionFactory"
   	name="BirtMath" desc="Provide math functions.">
   	<Function
          desc="Sum of the two numbers n1 and n2."
          name="add">
   		<DataType value="%dataType.Number"></DataType>
   		<Argument name="n1">
   			<DataType value="%dataType.Number"></DataType>
   		</Argument>
   		<Argument name="n2">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="n1 subtracts n2"
          name="subtract">
   		<DataType value="%dataType.Number"></DataType>
   		<Argument name="n1">
   			<DataType value="%dataType.Number"></DataType>
   		</Argument>
   		<Argument name="n2">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="n1 multiplies n2"
          name="multiple">
   		<DataType value="%dataType.Number"></DataType>
   		<Argument name="n1">
   			<DataType value="%dataType.Number"></DataType>
   		</Argument>
   		<Argument name="n2">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="dividend is divided by divisor"
          name="divide">
   		<DataType value="%dataType.Number"></DataType>
   		<Argument name="dividend">
   			<DataType value="%dataType.Number"></DataType>
   		</Argument>
   		<Argument name="divisor">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="Rounds a number to the specified number of digits. dec is an integer and can be negative. Default value for dec is 0 when omitted"
          name="round">
   		<DataType value="%dataType.Number"></DataType>
   		<Argument name="number">
   			<DataType value="%dataType.Number"></DataType>
   		</Argument>
   		<Argument name="dec" isOptional="true">
   			<DataType value="%dataType.Number"></DataType>
   		</Argument></Function>
   	<Function
          desc="Rounds a number up, away from 0, to the specified number of digits. Default for dec is 0."
          name="roundUp">
   		<DataType value="%dataType.Number"></DataType>
   		<Argument name="number">
   			<DataType value="%dataType.Number"></DataType>
   		</Argument>
   		<Argument name="dec" isOptional="true">
   			<DataType value="%dataType.Number"></DataType>
   		</Argument></Function>
   	<Function
          desc="Rounds a number down, away from 0, to the specified number of digits. Default for dec is 0."
          name="roundDown">
   		<DataType value="%dataType.Number"></DataType>
   		<Argument name="n">
   			<DataType value="%dataType.Number"></DataType>
   		</Argument>
   		<Argument name="dec" isOptional="true">
   			<DataType value="%dataType.Number"></DataType>
   		</Argument></Function>
   	<Function
          desc="Rounds a number up, away from zero, to the nearest multiple of significance."
          name="ceiling">
   		<DataType value="%dataType.Number"></DataType>
   		<Argument name="n">
   			<DataType value="%dataType.Number"></DataType></Argument>
   		<Argument name="significance">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="Remainder after number is divided by divisor. The result has the same sign as the divisor."
          name="mod">
   		<DataType value="%dataType.Number"></DataType>
   		<Argument name="number">
   			<DataType value="%dataType.Number"></DataType></Argument>
   		<Argument name="divisor">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="If the result from the dividend divided by the divisor is not zero or infinite then returns the result. Otherwise returns the given ifZero."
          name="safeDivide">
   		<DataType value="%dataType.Number"></DataType>
   		<Argument name="dividend">
   			<DataType value="%dataType.Number"></DataType></Argument>
   		<Argument name="divisor">
   			<DataType value="%dataType.Number"></DataType></Argument>
   		<Argument name="ifZero">
   			<DataType value="%dataType.Any"></DataType>
   		</Argument></Function>
   </Category>
   <Category
   	factoryclass="org.eclipse.birt.core.script.function.bre.BirtDateTimeFunctionFactory"
   	name="BirtDateTime" desc="Provide DateTime operation functions.">
   	<Function
          desc="4-digit year number of the given date/time value"
          name="year">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Quarter number (1 to 4) of the given date/time value"
          name="quarter">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Month of date/time value d. Option is an integer value:1 (default): return month number (1-12);2: return full month name as per user locale (e.g., January to December for English locale);3: return short month name as per user locale (e.g., Jan to Dec for English locale)"
          name="month">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
     <Argument
           isOptional="true"
           name="option">
        <DataType
              value="Integer">
        </DataType>
     </Argument></Function>
   	<Function
          desc="Week number of the year (1 to 52) of date/time value d."
          name="week">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Day number of the month(1 to 31)."
          name="day">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Day the week. Option is an integer value:1: return a number 1 (Sunday) to 7 (Saturday);2: return a number 1 (Monday) to 7 (Sunday);3: return a number 0 (Monday) to 6 (Sunday);4: return the weekday name as per user locale (e.g., Sunday – Saturday for English);5: return the abbreviated weekday name as per user locale (e.g., Sun – Sat for English)"
          name="weekDay">
   		<DataType value="%dataType.String"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
     <Argument
           isOptional="true"
           name="option">
        <DataType
              value="Integer">
        </DataType>
     </Argument></Function>
   	<Function
          desc="Returns a timestamp value which is midnight of the current date."
          name="today">
   		<DataType value="%dataType.DateTime"></DataType></Function>
   	<Function
          desc="Returns the current timestamp."
          name="now">
   		<DataType value="%dataType.DateTime"></DataType></Function>
   	<Function
          desc="Return difference in number of years."
          name="diffYear">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.DateTime"></DataType>
   		</Argument>
   		<Argument name="target">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Return difference in number of months."
          name="diffMonth">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.DateTime"></DataType>
   		</Argument>
   		<Argument name="target">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Return difference in number of quarters."
          name="diffQuarter">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.DateTime"></DataType>
   		</Argument>
   		<Argument name="target">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Return difference in number of weeks."
          name="diffWeek">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.DateTime"></DataType>
   		</Argument>
   		<Argument name="target">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Return difference in number of days"
          name="diffDay">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.DateTime"></DataType>
   		</Argument>
   		<Argument name="target">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Return difference in number of hours."
          name="diffHour">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.DateTime"></DataType>
   		</Argument>
   		<Argument name="target">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Return difference in number of minutes."
          name="diffMinute">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.DateTime"></DataType>
   		</Argument>
   		<Argument name="target">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Return difference in number of seconds."
          name="diffSecond">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="source">
   			<DataType value="%dataType.DateTime"></DataType>
   		</Argument>
   		<Argument name="target">
   			<DataType value="%dataType.DateTime"></DataType></Argument></Function>
   	<Function
          desc="Add n year(s) to the date"
          name="addYear">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="n">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="Add n month(s) to the date"
          name="addMonth">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="n">
   			<DataType value="%dataType.Number"></DataType></Argument>
   	</Function>
   	<Function
          desc="Add n quarter(s) to the date"
          name="addQuarter">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="n">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="Add n week(s) to the date"
          name="addWeek">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="n">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="Add n day(s) to the date"
          name="addDay">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="n">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="Add n hour(s) to the date"
          name="addHour">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="n">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="Add n minute(s) to the date"
          name="addMinute">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="n">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   	<Function
          desc="Add n second(s) to the date"
          name="addSecond">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="date">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="n">
   			<DataType value="%dataType.Number"></DataType></Argument></Function>
   </Category>
   <Category
   	factoryclass="org.eclipse.birt.core.script.function.general.BirtFinanceFunctionFactory"
   	name="Finance">
   	<Function
          desc="The depreciation of an asset for a given , single period using the double-declining balance method Remarks"
          name="ddb">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="cost">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="salvage">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="life">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="period">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   	</Function>
   	   	<Function
              desc="the future value of an annuity based on periodic , constant payments,and on an unvarying interest rate."
              name="fv">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="rate">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="nPer">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   		<Argument name="pmt">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="pv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="due">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   	</Function>
  
   	   	<Function
              desc="The interest payment for a given period of an annuity, based on periodic , constant payments, and on an unvarying interest rate."
              name="ipmt">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="rate">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="per">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   		<Argument name="nPer">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   		<Argument name="pv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="fv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="due">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   	</Function>
   	 	<Function
            desc="Internal rate of return of a series of periodic cash flows, payments and receipts, in an existing array"
            name="irr">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="cash">
   			<DataType value="%dataType.DoubleArray"></DataType>
   		</Argument>
   		<Argument name="intrate">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   	</Function>
   	   	 	<Function
                desc="The modified rate of return for a series of periodic cash flows (payments and receipts) in an existing array."
                name="mirr">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="arptr">
   			<DataType value="%dataType.DoubleArray"></DataType>
   		</Argument>
   		<Argument name="frate">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="rrate" isOptional="true">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   	   	 	</Function>
   	   	   	<Function
                  desc="Number of periods for an annuity based on periodic, constant payments, and on an unvarying interest rate."
                  name="nper">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="rate">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="pmt">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="pv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="fv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="due">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   	</Function>
   	   	 	<Function
                desc="The net present value of a varying series of periodic cash flows, both positive and negative, at a given interest rate."
                name="npv">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="rate">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="arptr">
   			<DataType value="%dataType.DoubleArray"></DataType>
   		</Argument>
   	</Function>
   	   	   	   	<Function
                      desc="Computes the percentage of the two numbers"
                      name="percent">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="denom">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="num">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="valueIfZero" isOptional="true">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   	   	   	   	</Function>
   	   	   	   	<Function
                      desc="The payment for an annuity, based on periodic , constant payments, and on an unvarying interest rate."
                      name="pmt">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="rate">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="nper">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   		<Argument name="pv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="fv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="due">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   	</Function>
   	 	<Function
            desc="The principal payment for a given period of an annuity, based on"
            name="ppmt">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="rate">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="per">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   		<Argument name="nPer">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   		<Argument name="pv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="fv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="due">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   	</Function>
   	 	<Function
            desc="The present value of an annuity based on periodic, constant payments to be paid in the future,and on an unvarying interest rate."
            name="pv">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="rate">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="nPer">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   		<Argument name="pmt">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="fv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="due">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   	</Function>
   		<Function
           desc="The interest rate per period for an annuity."
           name="rate">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="nper">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   		<Argument name="pmt">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="pv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="fv">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="due">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   		<Argument name="guess">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   	</Function>
   	   	   	   	<Function
                      desc="Straight-line depreciation of an asset for a single period."
                      name="sln">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="cost">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="salvage">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="life">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   	</Function>
   	<Function
          desc="Sum-of-years&apos;-digits depreciation of an asset for a specified period Remark"
          name="syd">
   		<DataType value="%dataType.Double"></DataType>
   		<Argument name="cost">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="salvage">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="life">
   			<DataType value="%dataType.Double"></DataType>
   		</Argument>
   		<Argument name="period">
   			<DataType value="%dataType.Integer"></DataType>
   		</Argument>
   	</Function>
   </Category>
   <Category
   	factoryclass="org.eclipse.birt.core.script.function.general.BirtDateTimeSpanFunctionFactory"
   	name="DateTimeSpan">
   	<Function
          desc="Returns a date that results from adding the years, months, and days to the start date."
          name="addDate">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="startDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="years">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<Argument name="months">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<Argument name="days">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   	</Function>
   	   	<Function
              desc="Returns a date that results adding the hours, minutes, seconds to the start date."
              name="addTime">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="startDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="hours">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<Argument name="minutes">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<Argument name="seconds">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   	</Function>
   	   	<Function
              desc="Returns a date that results from subtract the years, months, and days from the start date."
              name="subDate">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="startDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="years">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<Argument name="months">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<Argument name="days">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   	</Function>
   	<Function
          desc="Returns a date that results subtracting the hours, minutes, seconds from the start date."
          name="subTime">
   		<DataType value="%dataType.DateTime"></DataType>
   		<Argument name="startDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="hours">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<Argument name="minutes">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   		<Argument name="seconds">
   			<DataType value="%dataType.Integer"></DataType></Argument>
   	</Function>
   	<Function
          desc="The number of the days between two dates"
          name="days">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="startDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="endDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   	</Function>
   	   	<Function
              desc="The number of the hours between two dates"
              name="hours">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="startDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="endDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   	</Function>
   	   	<Function
              desc="The number of the minutes between two dates"
              name="minutes">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="startDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="endDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   	</Function>
   	   	<Function
              desc="The number of the months between two dates"
              name="months">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="startDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="endDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   	</Function>
   	   	<Function
              desc="The number of the seconds between two dates"
              name="seconds">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="startDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="endDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   	</Function>
   	   	   	<Function
                  desc="The number of the years between two dates"
                  name="years">
   		<DataType value="%dataType.Integer"></DataType>
   		<Argument name="startDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   		<Argument name="endDate">
   			<DataType value="%dataType.DateTime"></DataType></Argument>
   	</Function>
   </Category></extension>

</plugin>
